name: VERSATIL Framework CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript compilation
      run: npm run build

    - name: Run ESLint
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Test CLI commands
      run: |
        npm run test:cli
        node bin/versatil.js health
        node bin/versatil.js --version

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'

  quality-gates:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: VERSATIL Quality Gates
      run: |
        echo "üîç Running VERSATIL Framework Quality Gates..."
        npm run validate
        echo "‚úÖ Quality gates passed!"

    - name: Security audit
      run: npm audit --audit-level=moderate

    - name: Check bundle size
      run: |
        npm run build
        du -sh dist/

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Test framework integration
      run: |
        echo "ü§ñ Testing VERSATIL Framework Integration..."
        npm run build

        # Test CLI installation and basic commands
        npm link
        versatil health
        versatil agents

        # Test framework initialization
        mkdir test-project
        cd test-project
        echo "Testing framework initialization..."

        echo "‚úÖ Integration tests passed!"