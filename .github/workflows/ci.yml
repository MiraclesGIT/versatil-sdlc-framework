name: VERSATIL CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Maria-QA: Quality Assurance Pipeline
  quality-assurance:
    name: 🧪 Maria-QA Quality Gates
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔍 ESLint code analysis
      run: npm run lint --if-present

    - name: 🏗️ TypeScript compilation check
      run: npm run type-check --if-present

    - name: 🧪 Run unit tests
      run: npm test --if-present

    - name: 📊 Generate coverage report
      run: npm run test:coverage --if-present

    - name: 📤 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '18.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: versatil-coverage

    - name: 🔒 Security audit
      run: npm audit --audit-level moderate

    - name: ✅ VERSATIL validation
      run: npm run versatil:validate --if-present

  # Chrome MCP Testing Pipeline
  chrome-mcp-testing:
    name: 🌐 Chrome MCP Testing
    runs-on: ubuntu-latest
    needs: quality-assurance

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🎭 Install Playwright browsers
      run: npx playwright install --with-deps

    - name: 🌐 Install Chrome MCP
      run: npm install -g @modelcontextprotocol/server-chrome

    - name: 🚀 Start test server
      run: |
        npm run build --if-present
        npm run start &
        sleep 10
      continue-on-error: true

    - name: 🧪 Run Chrome MCP tests
      run: npm run maria:chrome-test --if-present

    - name: 👁️ Visual regression tests
      run: npm run maria:visual --if-present

    - name: ⚡ Performance tests
      run: npm run maria:performance --if-present

    - name: ♿ Accessibility tests
      run: npm run maria:accessibility --if-present

    - name: 📤 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: chrome-mcp-results
        path: |
          test-results/
          playwright-report/
          screenshots/
        retention-days: 30

  # James-Frontend: Frontend Validation
  frontend-validation:
    name: 🎨 James-Frontend Validation
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'frontend') || contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'components/')

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🎨 Frontend linting
      run: npm run james:lint --if-present

    - name: 🏗️ Build frontend
      run: npm run james:build --if-present

    - name: 📊 Bundle analysis
      run: npm run james:analyze --if-present

    - name: ⚡ Lighthouse CI
      run: npm run james:lighthouse --if-present

  # Marcus-Backend: Backend Validation
  backend-validation:
    name: ⚙️ Marcus-Backend Validation
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'backend') || contains(github.event.head_commit.modified, 'server/') || contains(github.event.head_commit.modified, 'api/')

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔒 Security scan
      run: npm run marcus:security --if-present

    - name: 🗄️ Database tests
      run: npm run marcus:db-test --if-present
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/test

    - name: 🔗 API tests
      run: npm run marcus:api-test --if-present

  # Sarah-PM: Documentation Validation
  documentation-validation:
    name: 📋 Sarah-PM Documentation
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'README.md') || contains(github.event.head_commit.modified, 'docs/')

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 📚 Validate documentation
      run: |
        # Check for broken links
        npm install -g markdown-link-check
        find . -name "*.md" -exec markdown-link-check {} \;

    - name: 📋 Generate project report
      run: npm run sarah:report --if-present

  # Release Pipeline
  release:
    name: 🚀 Release Pipeline
    runs-on: ubuntu-latest
    needs: [quality-assurance, chrome-mcp-testing]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org/'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🏗️ Build package
      run: npm run build --if-present

    - name: 📋 Generate release notes
      run: npm run sarah:changelog --if-present

    - name: 🎉 Create GitHub release
      uses: actions/create-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: VERSATIL SDLC Framework ${{ github.ref }}
        body: |
          🤖 VERSATIL SDLC Framework Release

          AI-Native Development Lifecycle with BMAD Methodology

          ## What's New
          - See CHANGELOG.md for detailed changes

          ## Installation
          ```bash
          npm install -g versatil-sdlc-framework
          npx versatil-sdlc init
          ```

          🤖 Generated with VERSATIL SDLC Framework
        draft: false
        prerelease: false

  # Notification Pipeline
  notifications:
    name: 📢 Build Notifications
    runs-on: ubuntu-latest
    needs: [quality-assurance, chrome-mcp-testing]
    if: always()

    steps:
    - name: 📊 Build Status Summary
      run: |
        echo "🧪 Quality Assurance: ${{ needs.quality-assurance.result }}"
        echo "🌐 Chrome MCP Testing: ${{ needs.chrome-mcp-testing.result }}"

        if [ "${{ needs.quality-assurance.result }}" == "success" ] && [ "${{ needs.chrome-mcp-testing.result }}" == "success" ]; then
          echo "✅ All VERSATIL quality gates passed!"
        else
          echo "❌ Some quality gates failed - review required"
        fi