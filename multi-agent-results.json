{
  "agents": {
    "enhanced-maria": {
      "name": "Enhanced Maria",
      "domain": "Quality Assurance",
      "icon": "üß™",
      "status": "loaded",
      "instance": {
        "name": "EnhancedMaria",
        "id": "enhanced-maria",
        "specialization": "Quality Assurance Lead - Test Coverage, Bug Detection, Quality Gates",
        "systemPrompt": "Senior QA Engineer with expertise in testing strategy, quality assurance, and comprehensive test coverage analysis"
      }
    },
    "enhanced-james": {
      "name": "Enhanced James",
      "domain": "Frontend Development",
      "icon": "üé®",
      "status": "loaded",
      "instance": {
        "name": "EnhancedJames",
        "id": "enhanced-james",
        "specialization": "Frontend Specialist - React/Vue Expert, UI/UX, Performance Optimization",
        "systemPrompt": "Frontend architect specializing in modern component architecture, responsive design, accessibility, and web performance"
      }
    },
    "enhanced-marcus": {
      "name": "Enhanced Marcus",
      "domain": "Backend Development",
      "icon": "‚öôÔ∏è",
      "status": "loaded",
      "instance": {
        "name": "EnhancedMarcus",
        "id": "enhanced-marcus",
        "specialization": "Backend Expert - API Architecture, Database Optimization, Security Specialist",
        "systemPrompt": "Backend architect and security expert specializing in Node.js, microservices, secure API design, and database optimization"
      }
    },
    "sarah-pm": {
      "name": "Sarah PM",
      "domain": "Project Management",
      "icon": "üìã",
      "status": "failed",
      "error": "AgentConstructor is not a constructor"
    },
    "alex-ba": {
      "name": "Alex BA",
      "domain": "Business Analysis",
      "icon": "üìä",
      "status": "failed",
      "error": "AgentConstructor is not a constructor"
    },
    "security-sam": {
      "name": "Security Sam",
      "domain": "Security Analysis",
      "icon": "üîí",
      "status": "loaded",
      "instance": {
        "name": "SecuritySam",
        "id": "security-sam",
        "specialization": "Specialized Agent",
        "systemPrompt": ""
      }
    }
  },
  "coordination": [
    {
      "from": "enhanced-marcus",
      "domain": "backend",
      "handoffs": [
        "security-sam"
      ],
      "reason": "4 issues detected in backend",
      "priority": "medium"
    }
  ],
  "summary": {
    "totalAgents": 6,
    "activeAgents": 4,
    "totalDomains": 6,
    "activeDomains": 4,
    "totalPatterns": 9,
    "criticalIssues": 0,
    "coordinationEvents": 1,
    "timestamp": "2025-09-28T19:30:04.220Z"
  },
  "frontend": {
    "domain": "frontend",
    "agent": "enhanced-james",
    "files": [
      {
        "filePath": "src/components/UserProfile.jsx",
        "score": 100,
        "issues": [],
        "recommendations": [],
        "handoffs": []
      },
      {
        "filePath": "src/styles/components.css",
        "score": 100,
        "issues": [],
        "recommendations": [],
        "handoffs": []
      }
    ],
    "patterns": [],
    "recommendations": [],
    "handoffs": []
  },
  "backend": {
    "domain": "backend",
    "agent": "enhanced-marcus",
    "files": [
      {
        "filePath": "src/api/auth.js",
        "score": 68,
        "issues": [
          {
            "type": "missing-rate-limit",
            "description": "POST endpoint without rate limiting",
            "location": "src/api/auth.js:8",
            "priority": "high",
            "action": "Add rate limiting middleware"
          },
          {
            "type": "missing-validation",
            "description": "User input without validation",
            "location": "src/api/auth.js:10",
            "priority": "high",
            "action": "Add input validation and sanitization"
          },
          {
            "type": "missing-rate-limit",
            "description": "POST endpoint without rate limiting",
            "location": "src/api/auth.js:30",
            "priority": "high",
            "action": "Add rate limiting middleware"
          },
          {
            "type": "missing-validation",
            "description": "User input without validation",
            "location": "src/api/auth.js:31",
            "priority": "high",
            "action": "Add input validation and sanitization"
          }
        ],
        "recommendations": [
          "‚úÖ Add input validation to API endpoints",
          "‚è±Ô∏è  Implement rate limiting for security"
        ],
        "handoffs": [
          "security-sam"
        ]
      },
      {
        "filePath": "src/database/connection.js",
        "score": 100,
        "issues": [],
        "recommendations": [],
        "handoffs": []
      }
    ],
    "patterns": [
      {
        "type": "missing-rate-limit",
        "description": "POST endpoint without rate limiting",
        "location": "src/api/auth.js:8",
        "priority": "high",
        "action": "Add rate limiting middleware"
      },
      {
        "type": "missing-validation",
        "description": "User input without validation",
        "location": "src/api/auth.js:10",
        "priority": "high",
        "action": "Add input validation and sanitization"
      },
      {
        "type": "missing-rate-limit",
        "description": "POST endpoint without rate limiting",
        "location": "src/api/auth.js:30",
        "priority": "high",
        "action": "Add rate limiting middleware"
      },
      {
        "type": "missing-validation",
        "description": "User input without validation",
        "location": "src/api/auth.js:31",
        "priority": "high",
        "action": "Add input validation and sanitization"
      }
    ],
    "recommendations": [
      "‚úÖ Add input validation to API endpoints",
      "‚è±Ô∏è  Implement rate limiting for security"
    ],
    "handoffs": [
      "security-sam"
    ]
  },
  "qa": {
    "domain": "qa",
    "agent": "enhanced-maria",
    "files": [
      {
        "filePath": "test/auth.test.js",
        "score": 68,
        "issues": [
          {
            "type": "missing-assertion",
            "description": "Test case missing assertions",
            "location": "test/auth.test.js:5",
            "priority": "high",
            "action": "Add expect() or assert() to validate behavior"
          },
          {
            "type": "missing-error-handling",
            "description": "Async function without error handling",
            "location": "test/auth.test.js:5",
            "priority": "medium",
            "action": "Wrap async operations in try-catch"
          },
          {
            "type": "missing-assertion",
            "description": "Test case missing assertions",
            "location": "test/auth.test.js:14",
            "priority": "high",
            "action": "Add expect() or assert() to validate behavior"
          },
          {
            "type": "missing-error-handling",
            "description": "Async function without error handling",
            "location": "test/auth.test.js:14",
            "priority": "medium",
            "action": "Wrap async operations in try-catch"
          },
          {
            "type": "missing-assertion",
            "description": "Test case missing assertions",
            "location": "test/auth.test.js:22",
            "priority": "high",
            "action": "Add expect() or assert() to validate behavior"
          }
        ],
        "recommendations": [
          "üß™ Add assertions to 3 test cases"
        ],
        "handoffs": []
      }
    ],
    "patterns": [
      {
        "type": "missing-assertion",
        "description": "Test case missing assertions",
        "location": "test/auth.test.js:5",
        "priority": "high",
        "action": "Add expect() or assert() to validate behavior"
      },
      {
        "type": "missing-error-handling",
        "description": "Async function without error handling",
        "location": "test/auth.test.js:5",
        "priority": "medium",
        "action": "Wrap async operations in try-catch"
      },
      {
        "type": "missing-assertion",
        "description": "Test case missing assertions",
        "location": "test/auth.test.js:14",
        "priority": "high",
        "action": "Add expect() or assert() to validate behavior"
      },
      {
        "type": "missing-error-handling",
        "description": "Async function without error handling",
        "location": "test/auth.test.js:14",
        "priority": "medium",
        "action": "Wrap async operations in try-catch"
      },
      {
        "type": "missing-assertion",
        "description": "Test case missing assertions",
        "location": "test/auth.test.js:22",
        "priority": "high",
        "action": "Add expect() or assert() to validate behavior"
      }
    ],
    "recommendations": [
      "üß™ Add assertions to 3 test cases"
    ],
    "handoffs": []
  },
  "security": {
    "domain": "security",
    "agent": "security-sam",
    "files": [
      {
        "filePath": "src/middleware/auth.js",
        "score": 85,
        "issues": [],
        "recommendations": [],
        "handoffs": []
      }
    ],
    "patterns": [],
    "recommendations": [],
    "handoffs": []
  }
}