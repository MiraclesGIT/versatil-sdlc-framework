# VERSATIL SDLC Framework - Production Docker Image
# Multi-stage build with Enhanced BMAD agents and security hardening

# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY src/ ./src/
COPY scripts/ ./scripts/
COPY templates/ ./templates/
COPY .cursorrules ./
COPY CLAUDE.md ./

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Security: Create non-root user
RUN addgroup -g 1001 -S versatil && \
    adduser -S versatil -u 1001

# Install security updates
RUN apk update && apk upgrade && \
    apk add --no-cache dumb-init && \
    rm -rf /var/cache/apk/*

WORKDIR /app

# Copy built application
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/scripts ./scripts
COPY --from=builder /app/templates ./templates
COPY --from=builder /app/.cursorrules ./
COPY --from=builder /app/CLAUDE.md ./

# Copy health check script
COPY healthcheck.js ./

# Create necessary directories
RUN mkdir -p /app/logs /app/.versatil && \
    chown -R versatil:versatil /app

# Security: Switch to non-root user
USER versatil

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD node healthcheck.js

# Environment variables
ENV NODE_ENV=production
ENV LOG_LEVEL=info
ENV ENHANCED_AGENTS_ENABLED=true
ENV PERFORMANCE_MONITORING=true

# Expose ports
EXPOSE 3000

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "dist/index.js"]